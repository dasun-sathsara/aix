[tool.ruff]
line-length = 140
target-version = 'py312'
exclude = ['build']

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
ignore = [
    'B006',   # Learn Python yo!
    "TRY401", # Avoid using bare `except` clauses
    'C408',   # Unnecessary dict/list call
    'COM819', # Trailing commas is da bomb
    "COM812", # Trailing commas is da bomb
    'D100',   # Missing docstring in public module
    'D104',   # Missing docstring in public packag
    'W293',   # Blank line contains whitespace
    'D107',   # Missing docstring in __init__
    'D213',   # Multi-line docstring summary should start at the second line
    'E501',   # Line too long
    'E731',   # Do not assign to lambda
    'T201',   # comment code, prints are lax during development
    'G004',   # Logging format string should not use f-string
    'RET503', # No explicit return None (all the other rules are about removing unnecessary things like this)
    'RUF012', # Mutable class attributes should be annotated with typing.ClassVar
    'S311',   # Standard pseudo-random generators are not suitable for security/cryptographic purposes
    'SIM300', # Yoda is wiser than you!
    'TRY003', # Avoid long messages outside of exception class
    #'TRY004',  # Use TypeError instead of ValueError
    'TRY301', # Abstract raise garbage
    # do not remove blank lines
    'W293',
]
select = [
    'A',     # flake8-builtins
    'ASYNC', # https://docs.astral.sh/ruff/rules/#flake8-async-async
    'B',     # flake8-bugbear
    'BLE',   # flake8-blind-except
    'C4',    # unnecessary comprehensions, map()
    'COM',   # flake8-commas
    'DTZ',   # flake8-datetimez
    'E',     # pycodestyle
    'ERA',   # No commented out code
    'EXE',   # flake8-executable
    'F',     # pyflakes
    'FLY',   # flynt
    'G',     # flake8-logging-format
    'I',     # isort
    'ICN',   # https://github.com/joaopalmeiro/flake8-import-conventions
    'ISC',   # https://pypi.org/project/flake8-implicit-str-concat/
    'LOG',   # flake8-logging
    'PERF',  # perflint
    'PIE',   # https://pypi.org/project/flake8-pie/
    'PLC',   # Pylint conventions
    'PLE',   # Pylint error
    'PLW',   # Pylint warnings
    'PT',    # https://pypi.org/project/flake8-pytest-style/
    'PTH',   # flake8 use pathlib
    'RET',   # https://pypi.org/project/flake8-return/
    'RUF',   # Ruff rules
    'S',     # https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    'SIM',   # https://pypi.org/project/flake8-simplify/
    'T',     # flake8-debugger
    'TRY',   # tryceratops
    'UP',    # pyupgrade
    'W',     # pycodestyle
    #'ARG',  # flake8 unused arguments (not really helpful, unused func args are common and ok)
    #'D',  # pydocstyle (too much)
    #'N',  # pep8-naming (too opinionated)
    #'NPY', # numpy
    #'PD', # pandas
    #'PL',  # Full Pylint (too much)
    #'PLR',  # Pylint refactor (too much/too opinionated)
]
